import nodemailer from "nodemailer";

export default async function sendEmailNotification(
  email: string,
  userName: string,
  ticketNumbers?: string[],
  isConfirmation?: boolean
) {
  try {
    const transporter = nodemailer.createTransport({
      service: "gmail",
      auth: {
        user: process.env.GMAIL_USER,
        pass: process.env.GMAIL_PASS,
      },
    });

    if (ticketNumbers && isConfirmation) {
      // const ticketListHtml = ticketNumbers
      //   .map((ticket) => `<li><strong>${ticket}</strong></li>`)
      //   .join("");

      await transporter.sendMail({
        from: `рІерЅдрѕї рѕўрІхрѕЃріњріарѕѕрѕЮ рЇѕрѕѕрїѕ рІ«рѕГрІ│ріќрѕх рѕ░ріЋрЅарЅх рЅх/рЅцрЅх <${process.env.GMAIL_USER}>`,
        to: email,
        subject: "Ticket Confirmation ­ЪјФ",
        html: `
        <img src="https://res.cloudinary.com/digswjgpt/image/upload/v1741005286/%E1%8C%89%E1%8B%9E-01_1_a29hhn.jpg" alt="home" border="0" width="300px">
        <h2>рѕ░рѕІрѕЮ ${userName},</h2>
        <p>ріГрЇЇрІФрІј рЅ░рЅђрЅБрІГріљрЅх <strong>ріарїЇріЮрЅирѕЇ!</strong>! ­ЪјЅ</p>
        <p>рІерЅхрігрЅх рЅЂрїЦрѕГрІј: ${ticketNumbers[0]}</p>
        <p>рЅ▓рігрЅх рѕхрѕѕрїѕрІЎ ріЦріЊрѕўрѕ░рїЇріЊрѕѕріЋрЇб ріЦрѕГрѕхрІјріЋ рѕѕрѕЏрІерЅх рЅарїЅрїЅрЅх ріЦріЋрїарЅБрЅарЅЃрѕѕріЋ!</p>
        <br/>
        <p>рІерЅдрѕї рѕўрІхрѕЃріњріарѕѕрѕЮ рЇѕрѕѕрїѕ рІ«рѕГрІ│ріќрѕх рѕ░ріЋрЅарЅх рЅх/рЅцрЅх</p>
      `,
      });
    } else if (!isConfirmation) {
      await transporter.sendMail({
        from: `рІерЅдрѕї рѕўрІхрѕЃріњріарѕѕрѕЮ рЇѕрѕѕрїѕ рІ«рѕГрІ│ріќрѕх рѕ░ріЋрЅарЅх рЅх/рЅцрЅх <${process.env.GMAIL_USER}>`,
        to: email,
        subject: "рІерѕърѕЅрЅхріЋ рЅЁрїй рЅ░рЅђрЅЦрѕѕріЊрѕЇрЇб",
        html: `
        <img src="https://res.cloudinary.com/digswjgpt/image/upload/v1741005286/%E1%8C%89%E1%8B%9E-01_1_a29hhn.jpg" alt="home" border="0" width="300px">
        <h2>рѕ░рѕІрѕЮ ${userName},</h2>
        <p>рІерЅ▓рігрЅх ріГрЇЇрІФрІјріЋ рѕхрѕІрѕхрїѕрЅА ріЦріЊрѕўрѕ░рїЇріЊрѕѕріЋрЇб</p>
        <p>ріГрЇЇрІФрІј рѕ▓рѕерїІрїѕрїЦ рІерЅ▓рігрЅх рЅЂрїЦрѕГ ріЦріЋрѕЇріГрѕЇрІјрЅ│рѕѕріЋрЇб ріЦрѕхріерІџрІФрІЇ рІхрѕерѕх рѕЏріЋріЏрЅИрІЇрѕЮ рїЦрІФрЅёрІјрЅй ріФрѕЅрІјрЅх рѕѕрѕЏріљрїІрїѕрѕГ ріљрЇЃріљрЅх рІГрѕ░рѕЏрІјрЇб</p>
        <br/>
        <p>рІерЅдрѕї рѕўрІхрѕЃріњріарѕѕрѕЮ рЇѕрѕѕрїѕ рІ«рѕГрІ│ріќрѕх рѕ░ріЋрЅарЅх рЅх/рЅцрЅх</p>
      `,
      });
    }
    console.log(`РюЁ Email sent to ${email}`);
  } catch (error) {
    console.error("РЮї Error sending email:", error);
  }
}
